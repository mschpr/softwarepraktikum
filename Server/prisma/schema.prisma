generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProgressEnglish {
  ID           Int           @id @default(autoincrement())
  IDVocab      Int?
  IDUser       Int?
  date         DateTime?     @db.Date
  stage        Int?
  VocabEnglish VocabEnglish? @relation(fields: [IDVocab], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "IDVocab")
}

model Users {
  ID           Int            @id @default(autoincrement())
  username     String?        @unique(map: "username") @db.VarChar
  password     String?        @db.VarChar
  name         String?        @db.VarChar
  role         String?        @db.VarChar
  ClassMembers ClassMembers[]
  Classes      Classes[]
}

model VocabEnglish {
  ID              Int               @id @default(autoincrement())
  vocab           String?           @db.VarChar
  translation     String?           @db.VarChar
  ProgressEnglish ProgressEnglish[]
}

model ProgressSpanish {
  ID           Int           @id @default(autoincrement())
  IDVocab      Int?
  IDUser       Int?
  date         DateTime?     @db.Date
  stage        Int?
  VocabSpanish VocabSpanish? @relation(fields: [IDVocab], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "IDVocab")
}

model VocabSpanish {
  ID              Int               @id @default(autoincrement())
  vocab           String            @db.VarChar
  translation     String            @db.VarChar
  ProgressSpanish ProgressSpanish[]
}

model ClassMembers {
  IDClass Int
  IDUser  Int
  Classes Classes @relation(fields: [IDClass], references: [ID], onDelete: Cascade, onUpdate: NoAction, map: "IDClass")
  Users   Users   @relation(fields: [IDUser], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "IDUser")

  @@id([IDClass, IDUser])
}

model Classes {
  ID           Int            @id @default(autoincrement()) @db.SmallInt
  name         String?        @db.VarChar
  teacher      String?        @db.VarChar
  language     String?        @db.VarChar
  ClassMembers ClassMembers[]
  Users        Users?         @relation(fields: [teacher], references: [username], onDelete: NoAction, onUpdate: NoAction, map: "teacher")
}
